"""add_campaign_and_refactor_game

Revision ID: a0a9ce17ef6c
Revises: 9ffcc3099a58
Create Date: 2025-07-15 09:03:18.301416

"""
from alembic import op
import sqlalchemy as sa
from uuid import uuid4
from datetime import datetime


# revision identifiers, used by Alembic.
revision = 'a0a9ce17ef6c'
down_revision = '9ffcc3099a58'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('campaigns',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('dm_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dm_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('campaign_maps',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('campaign_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('uploaded_by', sa.UUID(), nullable=True),
    sa.Column('default_grid_config', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # Add new columns to games table
    op.add_column('games', sa.Column('campaign_id', sa.UUID(), nullable=True))
    op.add_column('games', sa.Column('session_name', sa.String(), nullable=True))  # Temporarily nullable
    op.add_column('games', sa.Column('player_ids', sa.JSON(), nullable=True))
    op.add_column('games', sa.Column('moderator_ids', sa.JSON(), nullable=True))
    op.add_column('games', sa.Column('seat_colors', sa.JSON(), nullable=True))
    op.add_column('games', sa.Column('current_session_number', sa.Integer(), nullable=True))
    op.add_column('games', sa.Column('session_started_at', sa.DateTime(), nullable=True))
    op.add_column('games', sa.Column('last_activity_at', sa.DateTime(), nullable=True))
    
    # Migrate existing data
    connection = op.get_bind()
    
    # Get existing games
    result = connection.execute(sa.text("SELECT id, name, dm_id, created_at FROM games"))
    games = result.fetchall()
    
    # For each existing game, create a default campaign
    for game in games:
        game_id, game_name, dm_id, created_at = game
        campaign_id = uuid4()
        
        # Create default campaign
        connection.execute(sa.text("""
            INSERT INTO campaigns (id, name, dm_id, status, created_at) 
            VALUES (:campaign_id, :name, :dm_id, 'active', :created_at)
        """), {
            'campaign_id': campaign_id,
            'name': f"Campaign for {game_name}",
            'dm_id': dm_id,
            'created_at': created_at
        })
        
        # Update game with new fields
        connection.execute(sa.text("""
            UPDATE games SET 
                campaign_id = :campaign_id,
                session_name = :session_name,
                player_ids = '[]',
                moderator_ids = '[]',
                seat_colors = '{}',
                current_session_number = 1,
                last_activity_at = :last_activity_at
            WHERE id = :game_id
        """), {
            'campaign_id': campaign_id,
            'session_name': game_name,
            'game_id': game_id,
            'last_activity_at': created_at
        })
    
    # Make session_name NOT NULL after data migration
    op.alter_column('games', 'session_name', nullable=False)
    
    # Create foreign key constraint
    op.create_foreign_key(None, 'games', 'campaigns', ['campaign_id'], ['id'])
    
    # Drop old columns
    op.drop_column('games', 'name')
    op.drop_column('games', 'description')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('games', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('games', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'games', type_='foreignkey')
    op.drop_column('games', 'last_activity_at')
    op.drop_column('games', 'session_started_at')
    op.drop_column('games', 'current_session_number')
    op.drop_column('games', 'seat_colors')
    op.drop_column('games', 'moderator_ids')
    op.drop_column('games', 'player_ids')
    op.drop_column('games', 'session_name')
    op.drop_column('games', 'campaign_id')
    op.drop_table('campaign_maps')
    op.drop_table('campaigns')
    # ### end Alembic commands ###